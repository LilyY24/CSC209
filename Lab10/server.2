Script started on Thu 22 Nov 2018 12:26:38 PM EST
]0;qieqingy@wolf:/h/u6/c7/06/qieqingy/qieqingy/Lab10wolf:~/qieqingy/Lab10$ fdb bu[K[K[K[K[K[Kd[Kgdb bufserver.1[K[K
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break main
Breakpoint 1 at 0x400bce: file bufserver.c, line 18.
(gdb) run 
Starting program: /h/u6/c7/06/qieqingy/qieqingy/Lab10/bufserver 

Breakpoint 1, main () at bufserver.c:18
18      int main() {
(gdb) n
21          setbuf(stdout, NULL);
(gdb) 
23          struct sockaddr_in *self = init_server_addr(PORT);
(gdb) 
24          int listenfd = set_up_server_socket(self, 5);
(gdb) 
27              int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...
New connection accepted from 127.0.0.1:59432
28              if (fd < 0) {
(gdb) n
33              char buf[BUFSIZE] = {'\0'};
(gdb) n
34              int inbuf = 0;           // How many bytes currently in buffer?
(gdb) n
35              int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) n
36              char *after = buf;       // Pointer to position after the data in buf
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41                  inbuf += nbytes;
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
75                  after = buf +inbuf;
(gdb) n
76                  room = BUFSIZE - inbuf;
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf += nbytes;
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
75                  after = buf +inbuf;
(gdb) print i[Kbuf
$1 = "A stitch i", '\000' <repeats 19 times>
(gdb) n
76                  room = BUFSIZE - inbuf;
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
n
41                  inbuf += nbytes;
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
75                  after = buf +inbuf;
(gdb) 
76                  room = BUFSIZE - inbuf;
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf += nbytes;
(gdb) print i[Kbuf
$2 = "A stitch in time\r\n", '\000' <repeats 11 times>
(gdb) print inbuf
$3 = 15
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58                      buf[where - 2] = '\0';
(gdb) print where
$4 = 18
(gdb) print inbuf
$5 = 18
(gdb) n
60                      printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
66                      memmove(buf, buf + where, BUFSIZE - where);
(gdb) print buf
$6 = "A stitch in time\000\n", '\000' <repeats 11 times>
(gdb) orint[K[K[K[K[Kprint buf+where
$7 = 0x7fffffffea22 ""
(gdb) n
67                      inbuf -= where;
(gdb) print inbuf
$8 = 18
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) print inbuf
$9 = 0
(gdb) print buf
$10 = '\000' <repeats 12 times>, "time\000\n", '\000' <repeats 11 times>
(gdb) n
75                  after = buf +inbuf;
(gdb) b[Kn
76                  room = BUFSIZE - inbuf;
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) print buf
$11 = '\000' <repeats 12 times>, "time\000\n", '\000' <repeats 11 times>
(gdb) n
41                  inbuf += nbytes;
(gdb) print buf
$12 = "A stit\000\000\000\000\000\000time\000\n", '\000' <repeats 11 times>
(gdb) print inbuf
$13 = 0
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) print inbuf
$14 = 6
(gdb) n
75                  after = buf +inbuf;
(gdb) n
76                  room = BUFSIZE - inbuf;
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41                  inbuf += nbytes;
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
75                  after = buf +inbuf;
(gdb) 
76                  room = BUFSIZE - inbuf;
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
n 41                  inbuf += nbytes;
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
75                  after = buf +inbuf;
(gdb) 
76                  room = BUFSIZE - inbuf;
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf += nbytes;
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) print buf
$15 = "A stitch in time\r\n", '\000' <repeats 11 times>
(gdb) print inbuf
$16 = 18
(gdb) n
58                      buf[where - 2] = '\0';
(gdb) n
60                      printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
66                      memmove(buf, buf + where, BUFSIZE - where);
(gdb) n
67                      inbuf -= where;
(gdb) print buf
$17 = '\000' <repeats 12 times>, "time\000\n", '\000' <repeats 11 times>
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
75                  after = buf +inbuf;
(gdb) 
76                  room = BUFSIZE - inbuf;
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf += nbytes;
(gdb) print buf
$18 = "A stitc\000\000\000\000\000time\000\n", '\000' <repeats 11 times>
(gdb) quit
A debugging session is active.

        Inferior 1 [process 12911] will be killed.

Quit anyway? (y or n) y
]0;qieqingy@wolf:/h/u6/c7/06/qieqingy/qieqingy/Lab10wolf:~/qieqingy/Lab10$ exit
exit

Script done on Thu 22 Nov 2018 12:36:07 PM EST
